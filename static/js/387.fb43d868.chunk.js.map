{"version":3,"file":"static/js/387.fb43d868.chunk.js","mappings":"sOAEaA,E,OAAmBC,GAAAA,IAAH,6D,SCiC7B,EA9BgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,EAC/B,GAAE,CAACJ,IAECG,GAKH,SAACL,EAAD,UACGK,EAAQK,OAAS,GAChB,wBACGL,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGD,EADE,OAQf,uEAfG,IAmBV,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  border-bottom: 3px solid #d4d9dd;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'movieAPI';\nimport { ReviewsContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content }) => (\n            <li key={author}>\n              <b>Author: {author}</b>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsContainer","styled","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","length","map","author","content"],"sourceRoot":""}